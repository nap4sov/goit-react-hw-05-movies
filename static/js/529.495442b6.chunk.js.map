{"version":3,"file":"static/js/529.495442b6.chunk.js","mappings":"2NACA,EAAuB,qBAAvB,EAAmD,qB,SCgCnD,EA5Ba,WACT,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBH,GACbI,MAAK,SAAAC,GAAK,OAAIN,EAAQM,EAAMP,KAAKQ,MAAM,EAAG,QAC1CC,MAAMC,QAAQC,OACpB,CAACT,KAGA,eAAIU,UAAWC,EAAf,SACKb,EAAKc,KAAI,YAAmD,IAAhDC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAClCC,EAAaJ,EAAY,UACtBK,EAAAA,IADsB,OACFL,GACvB,wHACN,OACI,gBAAoBH,UAAWC,EAA/B,UACKM,IAAc,gBAAKE,IAAKF,EAAYG,IAAKL,KAC1C,wBAAKA,KACL,uCAAeC,OAHVF,U,6NCtB7B,IAAMO,EAAU,2CACVC,EAAW,gCACJC,EAAkB,mCAClBC,EAAsB,uCACtBN,EAAoB,kCAEpBO,EAAsB,WAC/B,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,8BAAkCD,IACzCjB,MAAK,SAAAuB,GACF,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAM,qBAEpB,OAAOF,EAAIG,UAEd1B,MAAK,SAAA2B,GAAI,OAAIA,EAAKC,YAGdC,EAAqB,SAAAC,GAC9B,OAAOR,MAAM,GAAD,OAAIJ,EAAJ,8BAAkCY,EAAlC,YAA2Cb,IAClDjB,MAAK,SAAAuB,GACF,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAM,qBAEpB,OAAOF,EAAIG,UAEd1B,MAAK,SAAA2B,GAAI,OAAIA,EAAKC,YAGdG,EAAoB,SAAAnC,GAC7B,OAAO0B,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBtB,EAArB,YAAgCqB,IAAWjB,MAAK,SAAAuB,GACxD,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAM,qBAEpB,OAAOF,EAAIG,WAIN3B,EAAoB,SAAAH,GAC7B,OAAO0B,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBtB,EAArB,oBAAwCqB,IAAWjB,MAAK,SAAAuB,GAChE,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAM,qBAEpB,OAAOF,EAAIG,WAINM,EAAoB,SAAApC,GAC7B,OAAO0B,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBtB,EAArB,oBAAwCqB,IAAWjB,MAAK,SAAAuB,GAChE,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAM,qBAEpB,OAAOF,EAAIG,OAAO1B,MAAK,SAAA2B,GAAI,OAAIA,EAAKC","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/styles.module.css?e343","components/Cast/index.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"styles_list__pzxAM\",\"item\":\"styles_item__TIa+Y\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits, CAST_PIC_BASE_URL } from 'services/moviesApi';\nimport styles from './styles.module.css';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        fetchMovieCredits(movieId)\n            .then(movie => setCast(movie.cast.slice(0, 12)))\n            .catch(console.log);\n    }, [movieId]);\n\n    return (\n        <ul className={styles.list}>\n            {cast.map(({ profile_path, credit_id, name, character }) => {\n                const profilePic = profile_path\n                    ? `${CAST_PIC_BASE_URL}${profile_path}`\n                    : 'https://st3.depositphotos.com/1322515/35964/v/200/depositphotos_359648638-stock-illustration-image-available-icon.jpg';\n                return (\n                    <li key={credit_id} className={styles.item}>\n                        {profilePic && <img src={profilePic} alt={name} />}\n                        <h4>{name}</h4>\n                        <p>Character: {character}</p>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n\nexport default Cast;\n","const API_KEY = 'api_key=37eb00bc9ebde6b8ee688dc1b47e357c';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nexport const POSTER_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const BACKGROUND_BASE_URL = 'https://image.tmdb.org/t/p/original/';\nexport const CAST_PIC_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n\nexport const fetchTrendingMovies = () => {\n    return fetch(`${BASE_URL}trending/movie/day?${API_KEY}`)\n        .then(res => {\n            if (!res.ok) {\n                throw new Error('Nothing was found');\n            }\n            return res.json();\n        })\n        .then(data => data.results);\n};\n\nexport const fetchMoviesByTitle = title => {\n    return fetch(`${BASE_URL}search/movie?query=${title}&${API_KEY}`)\n        .then(res => {\n            if (!res.ok) {\n                throw new Error('Nothing was found');\n            }\n            return res.json();\n        })\n        .then(data => data.results);\n};\n\nexport const fetchMovieDetails = movieId => {\n    return fetch(`${BASE_URL}movie/${movieId}?${API_KEY}`).then(res => {\n        if (!res.ok) {\n            throw new Error('Nothing was found');\n        }\n        return res.json();\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n    return fetch(`${BASE_URL}movie/${movieId}/credits?${API_KEY}`).then(res => {\n        if (!res.ok) {\n            throw new Error('Nothing was found');\n        }\n        return res.json();\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n    return fetch(`${BASE_URL}movie/${movieId}/reviews?${API_KEY}`).then(res => {\n        if (!res.ok) {\n            throw new Error('Nothing was found');\n        }\n        return res.json().then(data => data.results);\n    });\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCredits","then","movie","slice","catch","console","log","className","styles","map","profile_path","credit_id","name","character","profilePic","CAST_PIC_BASE_URL","src","alt","API_KEY","BASE_URL","POSTER_BASE_URL","BACKGROUND_BASE_URL","fetchTrendingMovies","fetch","res","ok","Error","json","data","results","fetchMoviesByTitle","title","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}